/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
/ {
    behaviors {
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
    };
};
/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// |SHFTCP|  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ENT  |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |  '   |
//                    | GUI | SPC | LWR |   | RSE | SPC  | ALT |
                        bindings = <
   &kp TAB        &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &mt LSHFT CAPS &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp RET
   &kp LCTRL      &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp SQT
                 &kp LGUI &kp SPACE &mo_tog 1 1   &tog 2 &kp SPACE &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |  7  |  8  |  9  |  *  | DEL | BKSP |
// |SHFTCP|     |     |     |     |     |   |  4  |  5  |  6  | PGUP|  UP | PGDWN|
// | CTRL |     |     |     |     |     |   |  1  |  2  |  3  | LFT | DWN | RGT  |
//                    | GUI | SPC |     |   |     |  0  | ALT |
                        bindings = <
   &bt BT_CLR     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp N7   &kp N8   &kp N9 &kp STAR  &kp DEL  &kp BSPC
   &mt LSHFT CAPS &trans       &trans       &trans       &trans       &trans         &kp N4   &kp N5   &kp N6 &kp PG_UP &kp UP   &kp PG_DN
   &kp LCTRL      &trans       &trans       &trans       &trans       &trans         &kp N1   &kp N2   &kp N3 &kp LEFT  &kp DOWN &kp RIGHT
                          	                &kp LGUI     &kp SPACE    &trans         &trans   &kp N0   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// |SHFTCP|     |PSCRN|PLAYP|VOLUP|BRIUP|   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | CTRL |     |     | MUTE|VOLDN|BRIDN|   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI | SPC |     |   |     | SPC | ALT |
                        bindings = <
   &kp  ESC       &kp EXCL &kp AT    &kp HASH   &kp DLLR      &kp PRCNT      &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &mt LSHFT CAPS &trans   &kp PSCRN &kp C_PP   &kp C_VOL_UP  &kp C_BRI_UP   &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LCTRL      &trans   &trans    &kp C_MUTE &kp C_VOL_DN  &kp C_BRI_DN   &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	             &kp LGUI   &kp SPACE     &trans         &trans    &kp SPACE &kp RALT
                        >;
                };
        };
};
